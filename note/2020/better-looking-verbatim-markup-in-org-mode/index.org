#+SETUPFILE: ../../setup.org
#+TITLE: Better-looking Verbatim Markup in Org Mode
#+DATE: <2020-07-07 Tue 21:38>
#+TAGS: Org_Mode Emacs

Org mode has two verbatim markups: =~code~= and ~=verbatim=~. I think Markdown’s =`code`= looks better as backticks are smaller, thus more unobtrusive when in body text and tables. I made =~= and ~=~ in Org Mode to display as =`=, the result looks pretty good:

[[./demo.png]]

The idea is to add an ~display~ text property to the markers when fontifying them. First, in ~org-emphasis-alist~, I added an extra fourth entry for =~= and ~=~: the text property we will add to =~= and ~=~ in fontification function.

#+begin_src emacs-lisp
("=" org-verbatim verbatim (display "`"))
("~" org-code verbatim (display "`"))
#+end_src

Sadly, there is no opportunity for hooks or advising the fontification function, I had to redefine ~org-do-emphasis-faces~. Towards the end of the function, we first change the ~pcase~ form to extract our extra entry added earlier, we change

#+begin_src emacs-lisp
(pcase-let ((`(,_ ,face ,_) (assoc marker org-emphasis-alist)))
  ...)
#+end_src

to

#+begin_src emacs-lisp
(pcase-let ((`(,_ ,face ,_ ,props) (assoc marker org-emphasis-alist)))
  ...)
#+end_src

Then, before 

#+begin_src emacs-lisp
(when org-hide-emphasis-markers
  (add-text-properties (match-end 4) (match-beginning 5)
		       '(invisible org-link))
  (add-text-properties (match-beginning 3) (match-end 3)
		       '(invisible org-link)))
#+end_src

we add

#+begin_src emacs-lisp
(when props
  (add-text-properties (match-end 4) (match-beginning 5)
		       props)
  (add-text-properties (match-beginning 3) (match-end 3)
		       props))
#+end_src

“Wait”, you may ask, “why not use ~org-hide-emphasis-markers~?” You can try, and you will regret it. The invisible markers make editing text around them a nightmare. 

Finally, here is the full code:

#+begin_src emacs-lisp
(with-eval-after-load 'org
  (setq org-emphasis-alist
        '(("*" bold)
          ("/" italic)
          ("_" underline)
          ("=" org-verbatim verbatim (display "`"))
          ("~" org-code verbatim (display "`"))
          ("+"
           (:strike-through t))))

  (defun org-do-emphasis-faces (limit)
    "Run through the buffer and emphasize strings."
    (let ((quick-re (format "\\([%s]\\|^\\)\\([~=*/_+]\\)"
			    (car org-emphasis-regexp-components))))
      (catch :exit
        (while (re-search-forward quick-re limit t)
	  (let* ((marker (match-string 2))
	         (verbatim? (member marker '("~" "="))))
	    (when (save-excursion
		    (goto-char (match-beginning 0))
		    (and
		     ;; Do not match table hlines.
		     (not (and (equal marker "+")
			       (org-match-line
			        "[ \t]*\\(|[-+]+|?\\|\\+[-+]+\\+\\)[ \t]*$")))
		     ;; Do not match headline stars.  Do not consider
		     ;; stars of a headline as closing marker for bold
		     ;; markup either.
		     (not (and (equal marker "*")
			       (save-excursion
			         (forward-char)
			         (skip-chars-backward "*")
			         (looking-at-p org-outline-regexp-bol))))
		     ;; Match full emphasis markup regexp.
		     (looking-at (if verbatim? org-verbatim-re org-emph-re))
		     ;; Do not span over paragraph boundaries.
		     (not (string-match-p org-element-paragraph-separate
					  (match-string 2)))
		     ;; Do not span over cells in table rows.
		     (not (and (save-match-data (org-match-line "[ \t]*|"))
			       (string-match-p "|" (match-string 4))))))
              ;; beg
	      (pcase-let ((`(,_ ,face ,_ ,props) (assoc marker org-emphasis-alist)))
                ;; end
	        (font-lock-prepend-text-property
	         (match-beginning 2) (match-end 2) 'face face)
	        (when verbatim?
		  (org-remove-flyspell-overlays-in
		   (match-beginning 0) (match-end 0))
		  (remove-text-properties (match-beginning 2) (match-end 2)
					  '(display t invisible t intangible t)))
	        (add-text-properties (match-beginning 2) (match-end 2)
				     '(font-lock-multiline t org-emphasis t))
                ;; beg
                (when props
                  (add-text-properties (match-end 4) (match-beginning 5)
				       props)
                  (add-text-properties (match-beginning 3) (match-end 3)
				       props))
                ;; end
	        (when org-hide-emphasis-markers
		  (add-text-properties (match-end 4) (match-beginning 5)
				       '(invisible org-link))
		  (add-text-properties (match-beginning 3) (match-end 3)
				       '(invisible org-link)))
	        (throw :exit t)))))))))
#+end_src
