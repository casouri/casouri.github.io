<item>
<title>Org HTML Export: Permanent Section Link</title>
<link>https://archive.casouri.cat/note/2020/org-html-export:-permanent-section-link</link>
<guid>https://archive.casouri.cat/note/2020/org-html-export:-permanent-section-link</guid>
<description><![CDATA[<p>
You probably already know that, when <code>ox-html</code> exports a HTML page, all the section links (links to headers) looks like <code>#orgacb420a</code>. Then if someone saves a link to your blog, it would look like <code>https://site.org#orgacb420a</code>. First, that doesn’t look good; second, this link is fragile—if you export your Org file again, section ids change, this link breaks.
</p>

<p>
Lee Hinman wrote a blog about generating custom id’s for permanent section link: <a href="https://writequit.org/articles/emacs-org-mode-generate-ids.html">Emacs Org-mode: Use good header ids!</a> The basic idea is sound but I don’t like how he stores the custom ids. He directly inserts them as properties under each header. Also he still uses randomly generated uuid, while I think the standard practice is to use human-readable title.
</p>

<p>
Standing on the shoulder of Lee Hinman, I wrote my version that generates section links base on the header, and doesn’t insert anything to my Org file. A header “Report Emacs bug” will have a section link <code>#Report-Emacs-bug</code>. This link stays unchanged across exports, as long as you don’t change the header.
</p>

<p>
So, how do we use <code>CUSTOM_ID</code> but don’t insert them into the Org file? That’s easy for me because my existing export function creates a temporary buffer and inserts the Org file’ content, then works in that buffer. Modifications made in this export process don’t affect the original file. So I just need to set header properties like Lee does in his post.
</p>

<p>
This is the code I use to insert <code>CUSTOM_ID</code>:
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #2C79F5;">(</span><span style="color: #E04E49;">defun</span> <span style="color: #A8289C;">luna-publish-populate-header-id</span> <span style="color: #A8289C;">()</span>
  <span style="color: #9a9ea2;">"Add CUSTOM_ID property to each header in current buffer."</span>
  <span style="color: #A8289C;">(</span><span style="color: #E04E49;">let</span> <span style="color: #489446;">(</span>id-list<span style="color: #489446;">)</span>
    <span style="color: #489446;">(</span><span style="color: #E04E49;">cl-labels</span> <span style="color: #DA7A48;">(</span><span style="color: #A8289C;">(</span>get-id <span style="color: #987816;">()</span>
                        <span style="color: #987816;">(</span><span style="color: #E04E49;">let</span> <span style="color: #2C79F5;">(</span><span style="color: #80a880;">(</span>id <span style="color: #887070;">(</span>url-encode-url
                                   <span style="color: #2C79F5;">(</span>replace-regexp-in-string
                                    <span style="color: #489446;">" "</span> <span style="color: #489446;">"-"</span>
                                    <span style="color: #A8289C;">(</span>org-get-heading t t t t<span style="color: #A8289C;">)</span><span style="color: #2C79F5;">)</span><span style="color: #887070;">)</span><span style="color: #80a880;">)</span>
                              <span style="color: #80a880;">(</span>dup-counter 1<span style="color: #80a880;">)</span><span style="color: #2C79F5;">)</span>
                          <span style="color: #2C79F5;">(</span><span style="color: #E04E49;">while</span> <span style="color: #80a880;">(</span>member id id-list<span style="color: #80a880;">)</span>
                            <span style="color: #80a880;">(</span><span style="color: #E04E49;">setq</span> id <span style="color: #887070;">(</span>format <span style="color: #489446;">"%s-%d"</span> id dup-counter<span style="color: #887070;">)</span><span style="color: #80a880;">)</span>
                            <span style="color: #80a880;">(</span><span style="color: #E04E49;">cl-incf</span> dup-counter<span style="color: #80a880;">)</span><span style="color: #2C79F5;">)</span>
                          <span style="color: #2C79F5;">(</span><span style="color: #E04E49;">push</span> id id-list<span style="color: #2C79F5;">)</span>
                          id<span style="color: #987816;">)</span><span style="color: #A8289C;">)</span><span style="color: #DA7A48;">)</span>
      <span style="color: #DA7A48;">(</span>org-map-entries
       <span style="color: #A8289C;">(</span><span style="color: #E04E49;">lambda</span> <span style="color: #987816;">()</span>
         <span style="color: #987816;">(</span>org-entry-put <span style="color: #2C79F5;">(</span>point<span style="color: #2C79F5;">)</span> <span style="color: #489446;">"CUSTOM_ID"</span> <span style="color: #2C79F5;">(</span>get-id<span style="color: #2C79F5;">)</span><span style="color: #987816;">)</span><span style="color: #A8289C;">)</span><span style="color: #DA7A48;">)</span><span style="color: #489446;">)</span><span style="color: #A8289C;">)</span><span style="color: #2C79F5;">)</span>
</pre>
</div>

<p>
Just to make the example complete, here is my export function in pseudo code:
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #2C79F5;">(</span><span style="color: #E04E49;">with-temp-buffer</span>
  <span style="color: #A8289C;">(</span>insert-file-contents org-file<span style="color: #A8289C;">)</span>
  <span style="color: #A8289C;">(</span>org-mode<span style="color: #A8289C;">)</span>
  <span style="color: #A8289C;">(</span>luna-publish-populate-header-id<span style="color: #A8289C;">)</span>
  <span style="color: #A8289C;">(</span>other-stuff<span style="color: #A8289C;">)</span>
  <span style="color: #A8289C;">(</span>org-export-to-file 'html html-file<span style="color: #A8289C;">)</span><span style="color: #2C79F5;">)</span>
</pre>
</div>
]]></description>
<pubDate>Mon, 06 Jul 2020 12:46:00 -0400</pubDate>
</item>
