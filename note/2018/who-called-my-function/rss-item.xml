<item>
<title>Who Called My Function?</title>
<link>https://archive.casouri.cat/note/2018/who-called-my-function</link>
<guid>https://archive.casouri.cat/note/2018/who-called-my-function</guid>
<description><![CDATA[<p>
Someone asked why his Emacs starts up with two split screen. Apparently something in his <code>init.el</code> caused that.
</p>

<p>
But how can we find what caused the problem? I searched around and found a way to check "backtrace frame" in Emacs: <code>backtrace-frames</code>.
</p>

<p>
Here is what I cooked up:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #2C79F5;">(</span>advice-add 'split-window-right <span style="color: #A8289C;">:before</span> <span style="color: #A8289C;">(</span><span style="color: #E04E49;">lambda</span> <span style="color: #489446;">(</span><span style="color: #987816;">&amp;rest</span> _<span style="color: #489446;">)</span> <span style="color: #489446;">(</span>print <span style="color: #DA7A48;">(</span>backtrace-frames<span style="color: #DA7A48;">)</span><span style="color: #489446;">)</span><span style="color: #A8289C;">)</span><span style="color: #2C79F5;">)</span>
<span style="color: #2C79F5;">(</span><span style="color: #E04E49;">defun</span> <span style="color: #A8289C;">some-function</span> <span style="color: #A8289C;">()</span> <span style="color: #A8289C;">(</span>split-window-right<span style="color: #A8289C;">)</span><span style="color: #2C79F5;">)</span>
</pre>
</div>

<p>
So when I call the function <code>some-funtion</code>, a split window is created with following information printed:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #2C79F5;">(</span><span style="color: #A8289C;">(</span>t backtrace-frames nil nil<span style="color: #A8289C;">)</span>
 <span style="color: #A8289C;">(</span>nil print
      <span style="color: #489446;">(</span><span style="color: #DA7A48;">(</span>backtrace-frames<span style="color: #DA7A48;">)</span><span style="color: #489446;">)</span>
      nil<span style="color: #A8289C;">)</span>
 <span style="color: #A8289C;">(</span>t
  <span style="color: #489446;">(</span><span style="color: #E04E49;">lambda</span>
    <span style="color: #DA7A48;">(</span><span style="color: #987816;">&amp;rest</span> _<span style="color: #DA7A48;">)</span>
    <span style="color: #DA7A48;">(</span>print
     <span style="color: #A8289C;">(</span>backtrace-frames<span style="color: #A8289C;">)</span><span style="color: #DA7A48;">)</span><span style="color: #489446;">)</span>
  nil nil<span style="color: #A8289C;">)</span>
 <span style="color: #A8289C;">(</span>t apply
    <span style="color: #489446;">(</span><span style="color: #DA7A48;">(</span><span style="color: #E04E49;">lambda</span>
       <span style="color: #A8289C;">(</span><span style="color: #987816;">&amp;rest</span> _<span style="color: #A8289C;">)</span>
       <span style="color: #A8289C;">(</span>print
        <span style="color: #987816;">(</span>backtrace-frames<span style="color: #987816;">)</span><span style="color: #A8289C;">)</span><span style="color: #DA7A48;">)</span>
     nil<span style="color: #489446;">)</span>
    nil<span style="color: #A8289C;">)</span>
 <span style="color: #A8289C;">(</span>t split-window-right nil nil<span style="color: #A8289C;">)</span>
 <span style="color: #A8289C;">(</span>t some-function nil nil<span style="color: #A8289C;">)</span>
 <span style="color: #A8289C;">(</span>t eval
    <span style="color: #489446;">(</span><span style="color: #DA7A48;">(</span>some-function<span style="color: #DA7A48;">)</span>
     nil<span style="color: #489446;">)</span>
    nil<span style="color: #A8289C;">)</span>
 <span style="color: #A8289C;">(</span>t elisp--eval-last-sexp
    <span style="color: #489446;">(</span>t<span style="color: #489446;">)</span>
    nil<span style="color: #A8289C;">)</span>
 <span style="color: #A8289C;">(</span>t eval-last-sexp
    <span style="color: #489446;">(</span>t<span style="color: #489446;">)</span>
    nil<span style="color: #A8289C;">)</span>
 <span style="color: #A8289C;">(</span>t eval-print-last-sexp
    <span style="color: #489446;">(</span>nil<span style="color: #489446;">)</span>
    nil<span style="color: #A8289C;">)</span>
 <span style="color: #A8289C;">(</span>t funcall-interactively
    <span style="color: #489446;">(</span>eval-print-last-sexp nil<span style="color: #489446;">)</span>
    nil<span style="color: #A8289C;">)</span>
 <span style="color: #A8289C;">(</span>t call-interactively
    <span style="color: #489446;">(</span>eval-print-last-sexp nil nil<span style="color: #489446;">)</span>
    nil<span style="color: #A8289C;">)</span>
 <span style="color: #A8289C;">(</span>t command-execute
    <span style="color: #489446;">(</span>eval-print-last-sexp<span style="color: #489446;">)</span>
    nil<span style="color: #A8289C;">)</span><span style="color: #2C79F5;">)</span>
</pre>
</div>

<p>
We can see <code>some-funtion</code> is right before <code>split-window</code>. Cool. As for the other <code>t</code> and <code>nil</code> stuff, I chose to not bother.
</p>
]]></description>
<pubDate>Sun, 14 Oct 2018 00:00:00 -0400</pubDate>
</item>
