<item>
<title>Who Called My Function?</title>
<link>https://archive.casouri.co.uk/note/2018/who-called-my-function/</link>
<guid>https://archive.casouri.co.uk/note/2018/who-called-my-function/</guid>
<description><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<!-- 2019-09-23 Mon 10:51 -->
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Who Called My Function?</title>
<meta name="generator" content="Org mode" />
<meta name="author" content="Yuan Fu" />
<link rel="stylesheet" type="text/css" href="../../style.css"/>
<script type="text/javascript" src="../../script.js"></script>
<link rel="icon" type="image/png" href="../../../favicon.png">
</head>
<body>
<div id="org-div-home-and-up">
 <a accesskey="h" href="../../index.html"> UP </a>
 |
 <a accesskey="H" href="../../index.html"> HOME </a>
</div><div id="content">
<h1 class="title">Who Called My Function?</h1>
<p>
Someone asked why his Emacs starts up with two split screen.
Apparently something in his <code>init.el</code> caused that.
</p>

<p>
But how can we find what caused the problem?
I searched around and found a way to check "backtrace frame" in Emacs: <code>backtrace-frames</code>.
</p>

<p>
Here is what I cooked up:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(advice-add 'split-window-right :before (lambda (&amp;rest _) (print (backtrace-frames))))
(defun some-function () (split-window-right))
</pre>
</div>

<p>
So when I call the function <code>some-funtion</code>,
a split window is created with following information printed:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">((t backtrace-frames nil nil)
 (nil print
      ((backtrace-frames))
      nil)
 (t
  (lambda
    (&amp;rest _)
    (print
     (backtrace-frames)))
  nil nil)
 (t apply
    ((lambda
       (&amp;rest _)
       (print
        (backtrace-frames)))
     nil)
    nil)
 (t split-window-right nil nil)
 (t some-function nil nil)
 (t eval
    ((some-function)
     nil)
    nil)
 (t elisp--eval-last-sexp
    (t)
    nil)
 (t eval-last-sexp
    (t)
    nil)
 (t eval-print-last-sexp
    (nil)
    nil)
 (t funcall-interactively
    (eval-print-last-sexp nil)
    nil)
 (t call-interactively
    (eval-print-last-sexp nil nil)
    nil)
 (t command-execute
    (eval-print-last-sexp)
    nil))
</pre>
</div>

<p>
We can see <code>some-funtion</code> is right before <code>split-window</code>. Cool.
As for the other <code>t</code> and <code>nil</code> stuff, I chose to not bother.
</p>
</div>
</body>
</html>]]></description>

<pubDate>Sun, 14 Oct 2018 00:00:00 -0400</pubDate>
</item>
