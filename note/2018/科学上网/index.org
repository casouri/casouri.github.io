#+SETUPFILE: ../../setup.org
#+TITLE: 科学上网
#+DATE: <2018-12-01 Sat 19:28>
#+TAGS: Hacker

一些笔记

-----

软件：[[https://github.com/v2ray][V2ray]]

教程资源：[[https://toutyrater.github.io][V2Ray 配置指南]]，[[https://guide.v2fly.org][白话文教程]]。作者文笔不错，解释清晰易懂。

[[https://www.v2ray.com/developer/protocols/vmess.html][☞ 官方文档]]

* 安装之前
** 查询时间
V2ray要求客户端与服务端时间相差2分钟以内（自动转化时区）。
#+BEGIN_SRC shell
date -R
#+END_SRC

* 配置
从配置指南和官方文档中复制而来，有一些修改。
** 客户端配置
#+BEGIN_SRC javascript
{
  "inbounds": [
    {
      "port": 1080, // 客户端的端口
      "protocol": "socks", // 入口协议为 SOCKS 5
      "domainOverride": ["tls","http"],
      "settings": {
        "auth": "noauth"  //socks的认证设置，noauth 代表不认证，由于 socks 通常在客户端使用，所以这里不认证
      }
    }
  ],
  "outbounds": [
    {
      "protocol": "vmess", // 出口协议
      "settings": {
        "vnext": [
          {
            "address": "serveraddr.com", // 服务器地址，一般为IP地址
            "port": 16823,  // 服务器端口
            "users": [
              {
                "id": "b831381d-6324-4d53-ad4f-8cda48b30811",  // 用户 ID，必须与服务器端配置相同
                "alterId": 64 // 此处的值也应当与服务器相同
              }
            ]
          }
        ]
      }
    }
  ]
}
#+END_SRC

** UUID
生成uuid。uuid承担类似密码的功能。

#+BEGIN_SRC shell
/proc/sys/kernel/random/uuid
#+END_SRC

** 服务器配置

#+BEGIN_SRC javascript
{
  "inbounds": [
    {
      "port": 16823, // 服务器监听端口
      "protocol": "vmess",    // 主传入协议
      "settings": {
        "clients": [
          {
            "id": "b831381d-6324-4d53-ad4f-8cda48b30811",  // 用户 ID，客户端与服务器必须相同
            "alterId": 64
          }
        ]
      }
    }
  ],
  "outbounds": [
    {
      "protocol": "freedom",  // 主传出协议
      "settings": {}
    }
  ]
}
#+END_SRC

** 日志配置

#+BEGIN_SRC javascript
{
  "log": {
    "loglevel": "warning", // 日志级别
    "access": "D:\\v2ray\\access.log",  // 这是 Windows 系统的路径
    "error": "D:\\v2ray\\error.log"
  },
}
#+END_SRC

引用自配置指南：

#+BEGIN_QUOTE
loglevel：日志级别，分别有5个，本例中设定的是 warning

debug：最详细的日志信息，专用于软件调试

info：比较详细的日志信息，可以看到 V2Ray 详细的连接信息

warning：警告信息。轻微的问题信息，经我观察 warning 级别的信息大多是网络错误。推荐使用 warning

error：错误信息。比较严重的错误信息。当出现 error 时该问题足以影响 V2Ray 的正常运行

none：空。不记录任何信息

access：将访问的记录保存到文件中，这个选项的值是要保存到的文件的路径

error：将错误的记录保存到文件中，这个选项的值是要保存到的文件的路径

error、access 字段留空，并且在手动执行 V2Ray 时，V2Ray 会将日志输出在 stdout 即命令行中（terminal、cmd 等），便于排错
#+END_QUOTE

* 运行
** Arch 服务器
=systemd= 默认的配置文件地址在 =/etc/v2ray/config.json= 。 软链接或者直接修改文件。

开启/运行用 =systemd= 就好：
#+BEGIN_SRC shell
systemctl start/stop/restart v2ray
systemctl status v2ray
#+END_SRC

** Mac客户端
Homebrew的v2ray叫v2ray-core。安装以后默认的配置文件地址在 =/usr/local/etc/v2ray/config.json= ，同样，软链接或者直接替换文件都可以。
因为配置文件在默认地址，启动只需要
#+BEGIN_SRC shell
brew services start v2ray-core
#+END_SRC
并且之后会开机自动运行。

<2020-05-09 Sat> 更新：用macports的安装方法：
#+begin_src shell
sudo port install v2ray
sudo port load v2ray
#+end_src

打开System Preference - Network - Location （顶部） - Edit Locations，
添加一个VPN的location。这样之后可以在顶部状态栏快速切换VPN和直连（最左Apple图标 -
Locaion）。

在新的Location里打开Advanced - Proxies - SOCKS5 Proxy - SOCKS5 Proxy Server，按Mac客户端的配置文件填，之前的例子里是 =127.0.0.1:16823= 。IP地址 =127.0.0.1= 一般不会变，改端口号就可以。

修改完成后保存。启动客户端并把Location改为新的就可以科学上网了。

** iOS客户端
Kitsunebi Lite，手动配置地址，端口和UUID，其他保持默认即可。

*<2019-05-19 Sun> 更新* ：Kitsunebi Lite下架又上了一个$5的Kitsunebi，太坑爹，现在建议用Shadowrocket，图标是小火箭。

** 安卓客户端
[[https://github.com/2dust/v2rayNG/releases][V2rayNG]]，配置方法和iOS一样。

;; Local Variables:
;; word-wrap: nil
;; End:
