<item>
<title>科学上网</title>
<link>https://archive.casouri.co.uk/note/2018/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/</link>
<guid>https://archive.casouri.co.uk/note/2018/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/</guid>
<description><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#org7301557">1. 安装之前</a>
<ul>
<li><a href="#orgf311d3b">1.1. 查询时间</a></li>
</ul>
</li>
<li><a href="#orgb943cd6">2. 配置</a>
<ul>
<li><a href="#org7243c5a">2.1. 客户端配置</a></li>
<li><a href="#org08ee574">2.2. UUID</a></li>
<li><a href="#org4e6b5f6">2.3. 服务器配置</a></li>
<li><a href="#orgee6bfe3">2.4. 日志配置</a></li>
</ul>
</li>
<li><a href="#org401d76d">3. 运行</a>
<ul>
<li><a href="#orgd29297c">3.1. Arch 服务器</a></li>
<li><a href="#org1f20376">3.2. Mac客户端</a></li>
<li><a href="#org06c191a">3.3. iOS客户端</a></li>
<li><a href="#orga2f7415">3.4. 安卓客户端</a></li>
</ul>
</li>
</ul>
</div>
</div>
<p>
一些笔记
</p>

<hr />

<p>
软件：<a href="https://github.com/v2ray">V2ray</a>
</p>

<p>
教程资源：<a href="https://toutyrater.github.io">V2Ray 配置指南</a>。作者文笔不错，解释清晰易懂。
</p>

<p>
<a href="https://www.v2ray.com/developer/protocols/vmess.html">☞ 官方文档</a>
</p>

<div id="outline-container-org7301557" class="outline-2">
<h2 id="org7301557"><span class="section-number-2">1</span> 安装之前</h2>
<div class="outline-text-2" id="text-1">
</div>
<div id="outline-container-orgf311d3b" class="outline-3">
<h3 id="orgf311d3b"><span class="section-number-3">1.1</span> 查询时间</h3>
<div class="outline-text-3" id="text-1-1">
<p>
V2ray要求客户端与服务端时间相差2分钟以内（自动转化时区）。
</p>
<div class="org-src-container">
<pre class="src src-shell">date -R
</pre>
</div>
</div>
</div>
</div>

<div id="outline-container-orgb943cd6" class="outline-2">
<h2 id="orgb943cd6"><span class="section-number-2">2</span> 配置</h2>
<div class="outline-text-2" id="text-2">
<p>
从配置指南和官方文档中复制而来，有一些修改。
</p>
</div>
<div id="outline-container-org7243c5a" class="outline-3">
<h3 id="org7243c5a"><span class="section-number-3">2.1</span> 客户端配置</h3>
<div class="outline-text-3" id="text-2-1">
<div class="org-src-container">
<pre class="src src-javascript">{
  "inbounds": [
    {
      "port": 1080, // 客户端的端口
      "protocol": "socks", // 入口协议为 SOCKS 5
      "domainOverride": ["tls","http"],
      "settings": {
        "auth": "noauth"  //socks的认证设置，noauth 代表不认证，由于 socks 通常在客户端使用，所以这里不认证
      }
    }
  ],
  "outbounds": [
    {
      "protocol": "vmess", // 出口协议
      "settings": {
        "vnext": [
          {
            "address": "serveraddr.com", // 服务器地址，一般为IP地址
            "port": 16823,  // 服务器端口
            "users": [
              {
                "id": "b831381d-6324-4d53-ad4f-8cda48b30811",  // 用户 ID，必须与服务器端配置相同
                "alterId": 64 // 此处的值也应当与服务器相同
              }
            ]
          }
        ]
      }
    }
  ]
}
</pre>
</div>
</div>
</div>

<div id="outline-container-org08ee574" class="outline-3">
<h3 id="org08ee574"><span class="section-number-3">2.2</span> UUID</h3>
<div class="outline-text-3" id="text-2-2">
<p>
生成uuid。uuid承担类似密码的功能。
</p>

<div class="org-src-container">
<pre class="src src-shell">/proc/sys/kernel/random/uuid
</pre>
</div>
</div>
</div>

<div id="outline-container-org4e6b5f6" class="outline-3">
<h3 id="org4e6b5f6"><span class="section-number-3">2.3</span> 服务器配置</h3>
<div class="outline-text-3" id="text-2-3">
<div class="org-src-container">
<pre class="src src-javascript">{
  "inbounds": [
    {
      "port": 16823, // 服务器监听端口
      "protocol": "vmess",    // 主传入协议
      "settings": {
        "clients": [
          {
            "id": "b831381d-6324-4d53-ad4f-8cda48b30811",  // 用户 ID，客户端与服务器必须相同
            "alterId": 64
          }
        ]
      }
    }
  ],
  "outbounds": [
    {
      "protocol": "freedom",  // 主传出协议
      "settings": {}
    }
  ]
}
</pre>
</div>
</div>
</div>

<div id="outline-container-orgee6bfe3" class="outline-3">
<h3 id="orgee6bfe3"><span class="section-number-3">2.4</span> 日志配置</h3>
<div class="outline-text-3" id="text-2-4">
<div class="org-src-container">
<pre class="src src-javascript">{
  "log": {
    "loglevel": "warning", // 日志级别
    "access": "D:\\v2ray\\access.log",  // 这是 Windows 系统的路径
    "error": "D:\\v2ray\\error.log"
  },
}
</pre>
</div>

<p>
引用自配置指南：
</p>

<blockquote>
<p>
loglevel：日志级别，分别有5个，本例中设定的是 warning
</p>

<p>
debug：最详细的日志信息，专用于软件调试
</p>

<p>
info：比较详细的日志信息，可以看到 V2Ray 详细的连接信息
</p>

<p>
warning：警告信息。轻微的问题信息，经我观察 warning 级别的信息大多是网络错误。推荐使用 warning
</p>

<p>
error：错误信息。比较严重的错误信息。当出现 error 时该问题足以影响 V2Ray 的正常运行
</p>

<p>
none：空。不记录任何信息
</p>

<p>
access：将访问的记录保存到文件中，这个选项的值是要保存到的文件的路径
</p>

<p>
error：将错误的记录保存到文件中，这个选项的值是要保存到的文件的路径
</p>

<p>
error、access 字段留空，并且在手动执行 V2Ray 时，V2Ray 会将日志输出在 stdout 即命令行中（terminal、cmd 等），便于排错
</p>
</blockquote>
</div>
</div>
</div>

<div id="outline-container-org401d76d" class="outline-2">
<h2 id="org401d76d"><span class="section-number-2">3</span> 运行</h2>
<div class="outline-text-2" id="text-3">
</div>
<div id="outline-container-orgd29297c" class="outline-3">
<h3 id="orgd29297c"><span class="section-number-3">3.1</span> Arch 服务器</h3>
<div class="outline-text-3" id="text-3-1">
<p>
<code>systemd</code> 默认的配置文件地址在 <code>/etc/v2ray/config.json</code> 。 软链接或者直接修改文件。
</p>

<p>
开启/运行用 <code>systemd</code> 就好：
</p>
<div class="org-src-container">
<pre class="src src-shell">systemctl start/stop/restart v2ray
systemctl status v2ray
</pre>
</div>
</div>
</div>

<div id="outline-container-org1f20376" class="outline-3">
<h3 id="org1f20376"><span class="section-number-3">3.2</span> Mac客户端</h3>
<div class="outline-text-3" id="text-3-2">
<p>
Homebrew的v2ray叫v2ray-core。安装以后默认的配置文件地址在 <code>/usr/local/etc/v2ray/config.json</code> ，同样，软链接或者直接替换文件都可以。
因为配置文件在默认地址，启动只需要
</p>
<div class="org-src-container">
<pre class="src src-shell">brew services start v2ray-core
</pre>
</div>
<p>
并且之后会开机自动运行。
</p>

<p>
打开System Preference - Network - Location （顶部） - Edit Locations，
添加一个VPN的location。这样之后可以在顶部状态栏快速切换VPN和直连（最左Apple图标 -
Locaion）。
</p>

<p>
在新的Location里打开Advanced - Proxies - SOCKS5 Proxy - SOCKS5 Proxy Server，按Mac客户端的配置文件填，之前的例子里是 <code>127.0.0.1:16823</code> 。IP地址 <code>127.0.0.1</code> 一般不会变，改端口号就可以。
</p>

<p>
修改完成后保存。启动客户端并把Location改为新的就可以科学上网了。
</p>
</div>
</div>

<div id="outline-container-org06c191a" class="outline-3">
<h3 id="org06c191a"><span class="section-number-3">3.3</span> iOS客户端</h3>
<div class="outline-text-3" id="text-3-3">
<p>
Kitsunebi Lite，手动配置地址，端口和UUID，其他保持默认即可。
</p>

<p>
<b><span class="timestamp-wrapper"><span class="timestamp">&lt;2019-05-19 Sun&gt; </span></span> 更新</b> ：Kitsunebi Lite下架又上了一个$5的Kitsunebi，太坑爹，现在建议用Shadowrocket，图标是小火箭。
</p>
</div>
</div>

<div id="outline-container-orga2f7415" class="outline-3">
<h3 id="orga2f7415"><span class="section-number-3">3.4</span> 安卓客户端</h3>
<div class="outline-text-3" id="text-3-4">
<p>
<a href="https://github.com/2dust/v2rayNG/releases">V2rayNG</a>，配置方法和iOS一样。
</p>
</div>
</div>
</div>
]]></description>

<pubDate>Sat, 01 Dec 2018 19:28:00 -0500</pubDate>
</item>
