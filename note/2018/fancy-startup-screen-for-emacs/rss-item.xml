<item>
<title>Fancy startup screen</title>
<link>https://archive.casouri.cat/note/2018/fancy-startup-screen-for-emacs</link>
<guid>https://archive.casouri.cat/note/2018/fancy-startup-screen-for-emacs</guid>
<description><![CDATA[

<div id="outline-container-org0644a9b" class="outline-2">
<h2 id="org0644a9b"><span class="section-number-2">1</span> Text image</h2>
<div class="outline-text-2" id="text-1">

<div class="figure">
<p>
</p>
</div>

<p>
I first drew the image in pixel mode in photoshop and exported it to png file:
</p>


<div class="figure">
<p>
</p>
</div>

<p>
Then used a simple python script to convert this image to text.
The script converts black pixel to "██" and white pixel to space:
</p>

<div class="org-src-container">
<pre class="src src-python"><span style="color: #9ca0a4;"># </span><span style="color: #9ca0a4;">-*- coding: utf-8 -*-</span>

<span style="color: #e45649;">import</span> sys

<span style="color: #e45649;">import</span> numpy <span style="color: #e45649;">as</span> np
<span style="color: #e45649;">from</span> PIL <span style="color: #e45649;">import</span> Image

<span style="color: #6a1868;">ARGV</span> = sys.argv
<span style="color: #6a1868;">DEFAULT_IMAGE_NAME</span> = <span style="color: #50a14f;">'image.png'</span>
<span style="color: #6a1868;">PIXEL</span> = <span style="color: #50a14f;">'&#9608;&#9608;'</span>
<span style="color: #6a1868;">SPACE</span> = <span style="color: #50a14f;">'  '</span>
<span style="color: #6a1868;">THRESH</span> = 127
<span style="color: #6a1868;">black</span> = SPACE
<span style="color: #6a1868;">white</span> = PIXEL


<span style="color: #e45649;">if</span> <span style="color: #a626a4;">len</span><span style="color: #4078f2;">(</span>ARGV<span style="color: #4078f2;">)</span> &gt; 1:
    <span style="color: #6a1868;">image_name</span> = ARGV<span style="color: #4078f2;">[</span>1<span style="color: #4078f2;">]</span>
<span style="color: #e45649;">else</span>:
    <span style="color: #6a1868;">image_name</span> = DEFAULT_IMAGE_NAME

<span style="color: #e45649;">if</span> <span style="color: #a626a4;">len</span><span style="color: #4078f2;">(</span>ARGV<span style="color: #4078f2;">)</span> &gt; 2:
    <span style="color: #6a1868;">cmd</span> = ARGV<span style="color: #4078f2;">[</span>2<span style="color: #4078f2;">]</span>
    <span style="color: #e45649;">if</span> cmd == <span style="color: #50a14f;">'-i'</span>: <span style="color: #9ca0a4;"># </span><span style="color: #9ca0a4;">innvert</span>
        <span style="color: #6a1868;">black</span>, <span style="color: #6a1868;">white</span> = PIXEL, SPACE

<span style="color: #6a1868;">image</span> = Image.<span style="color: #a626a4;">open</span><span style="color: #4078f2;">(</span>image_name<span style="color: #4078f2;">)</span>

<span style="color: #6a1868;">width</span>, <span style="color: #6a1868;">height</span> = image.size


<span style="color: #6a1868;">image</span> = np.asarray<span style="color: #4078f2;">(</span>image<span style="color: #4078f2;">)</span>

<span style="color: #6a1868;">text_image</span> = <span style="color: #50a14f;">''</span>
<span style="color: #e45649;">for</span> line <span style="color: #e45649;">in</span> image:
    <span style="color: #6a1868;">text_line</span> = <span style="color: #50a14f;">''</span>
    <span style="color: #e45649;">for</span> pixel <span style="color: #e45649;">in</span> line:
        <span style="color: #6a1868;">mask</span> = pixel<span style="color: #4078f2;">[</span>3<span style="color: #4078f2;">]</span>
        <span style="color: #e45649;">if</span> mask &lt; THRESH:
            <span style="color: #6a1868;">text_line</span> += black
        <span style="color: #e45649;">else</span>:
            <span style="color: #6a1868;">text_line</span> += white
    <span style="color: #6a1868;">text_image</span> += text_line + <span style="color: #50a14f;">'\n'</span>


<span style="color: #e45649;">print</span><span style="color: #4078f2;">(</span>text_image<span style="color: #4078f2;">)</span>
</pre>
</div>

<p>
Terminal displays:
</p>

<pre class="example">
          ████████
      ██████████████
   █████████         █
  ████████
████████
████████
████████
████████
████████
  ████████            █
  ██████████        ██
      ██████████████
          ████████
</pre>
</div>
</div>

<div id="outline-container-org24aca39" class="outline-2">
<h2 id="org24aca39"><span class="section-number-2">2</span> xpm image</h2>
<div class="outline-text-2" id="text-2">
<p>
I also made an actual image for the moon,
for that I converted png file to xpm with imagemagick:
</p>

<div class="org-src-container">
<pre class="src src-shell">convert moon.png moon.xpm
</pre>
</div>

<p>
To insert the image:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #4078f2;">(</span>overlay-put <span style="color: #a626a4;">(</span>make-overlay beg end<span style="color: #a626a4;">)</span> 'display <span style="color: #a626a4;">(</span>create-image image-path<span style="color: #a626a4;">)</span><span style="color: #4078f2;">)</span>
</pre>
</div>
</div>
</div>
]]></description>

<pubDate>Mon, 10 Sep 2018 00:00:00 -0400</pubDate>
</item>
