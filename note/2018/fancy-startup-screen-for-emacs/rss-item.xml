<item>
<title>Fancy startup screen</title>
<link>https://archive.casouri.cat/note/2018/fancy-startup-screen-for-emacs</link>
<guid>https://archive.casouri.cat/note/2018/fancy-startup-screen-for-emacs</guid>
<description><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#Text-image">Text image</a></li>
<li><a href="#xpm-image">xpm image</a></li>
</ul>
</div>
</div>


<div id="outline-container-Text-image" class="outline-2">
<h2 id="Text-image">Text image</h2>
<div class="outline-text-2" id="text-org7ef766e">

<div id="org8d4eb81" class="figure">
<p><img src="/note/2018/fancy-startup-screen-for-emacs/home.png" alt="home.png" />
</p>
</div>

<p>
I first drew the image in pixel mode in photoshop and exported it to png file:
</p>


<div id="org064b755" class="figure">
<p><img src="/note/2018/fancy-startup-screen-for-emacs/moon.png" alt="moon.png" />
</p>
</div>

<p>
Then used a simple python script to convert this image to text. The script converts black pixel to "██" and white pixel to space:
</p>

<div class="org-src-container">
<pre class="src src-python"><span style="color: #9a9ea2;"># </span><span style="color: #9a9ea2;">-*- coding: utf-8 -*-</span>

<span style="color: #E04E49;">import</span> sys

<span style="color: #E04E49;">import</span> numpy <span style="color: #E04E49;">as</span> np
<span style="color: #E04E49;">from</span> PIL <span style="color: #E04E49;">import</span> Image

<span style="color: #A8289C;">ARGV</span> = sys.argv
<span style="color: #A8289C;">DEFAULT_IMAGE_NAME</span> = <span style="color: #489446;">'image.png'</span>
<span style="color: #A8289C;">PIXEL</span> = <span style="color: #489446;">'&#9608;&#9608;'</span>
<span style="color: #A8289C;">SPACE</span> = <span style="color: #489446;">'  '</span>
<span style="color: #A8289C;">THRESH</span> = 127
<span style="color: #A8289C;">black</span> = SPACE
<span style="color: #A8289C;">white</span> = PIXEL


<span style="color: #E04E49;">if</span> <span style="color: #A8289C;">len</span><span style="color: #2C79F5;">(</span>ARGV<span style="color: #2C79F5;">)</span> &gt; 1:
    <span style="color: #A8289C;">image_name</span> = ARGV<span style="color: #2C79F5;">[</span>1<span style="color: #2C79F5;">]</span>
<span style="color: #E04E49;">else</span>:
    image_name = DEFAULT_IMAGE_NAME

<span style="color: #E04E49;">if</span> <span style="color: #A8289C;">len</span><span style="color: #2C79F5;">(</span>ARGV<span style="color: #2C79F5;">)</span> &gt; 2:
    <span style="color: #A8289C;">cmd</span> = ARGV<span style="color: #2C79F5;">[</span>2<span style="color: #2C79F5;">]</span>
    <span style="color: #E04E49;">if</span> cmd == <span style="color: #489446;">'-i'</span>: <span style="color: #9a9ea2;"># </span><span style="color: #9a9ea2;">innvert</span>
        <span style="color: #A8289C;">black</span>, <span style="color: #A8289C;">white</span> = PIXEL, SPACE

image = Image.<span style="color: #A8289C;">open</span><span style="color: #2C79F5;">(</span>image_name<span style="color: #2C79F5;">)</span>

<span style="color: #A8289C;">width</span>, <span style="color: #A8289C;">height</span> = image.size


image = np.asarray<span style="color: #2C79F5;">(</span>image<span style="color: #2C79F5;">)</span>

text_image = <span style="color: #489446;">''</span>
<span style="color: #E04E49;">for</span> line <span style="color: #E04E49;">in</span> image:
    text_line = <span style="color: #489446;">''</span>
    <span style="color: #E04E49;">for</span> pixel <span style="color: #E04E49;">in</span> line:
        mask = pixel<span style="color: #2C79F5;">[</span>3<span style="color: #2C79F5;">]</span>
        <span style="color: #E04E49;">if</span> mask &lt; THRESH:
            text_line += black
        <span style="color: #E04E49;">else</span>:
            text_line += white
    text_image += text_line + <span style="color: #489446;">'\n'</span>


<span style="color: #E04E49;">print</span><span style="color: #2C79F5;">(</span>text_image<span style="color: #2C79F5;">)</span>
</pre>
</div>

<p>
Terminal displays:
</p>

<pre class="example">
          ████████
      ██████████████
   █████████         █
  ████████
████████
████████
████████
████████
████████
  ████████            █
  ██████████        ██
      ██████████████
          ████████
</pre>
</div>
</div>

<div id="outline-container-xpm-image" class="outline-2">
<h2 id="xpm-image">xpm image</h2>
<div class="outline-text-2" id="text-org4b8273a">
<p>
I also made an actual image for the moon, for that I converted png file to xpm with imagemagick:
</p>

<div class="org-src-container">
<pre class="src src-shell">convert moon.png moon.xpm
</pre>
</div>

<p>
To insert the image:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"><span style="color: #2C79F5;">(</span>overlay-put <span style="color: #A8289C;">(</span>make-overlay beg end<span style="color: #A8289C;">)</span> 'display <span style="color: #A8289C;">(</span>create-image image-path<span style="color: #A8289C;">)</span><span style="color: #2C79F5;">)</span>
</pre>
</div>
</div>
</div>
]]></description>
<pubDate>Mon, 10 Sep 2018 00:00:00 -0400</pubDate>
</item>
