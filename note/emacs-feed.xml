<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Notes</title>
  <link href="https://archive.casouri.cat/note" rel="self" />
  <updated>2021-08-06T00:00:00.00-05:00</updated>
  <author>
    <name>Yuan Fu</name>
  </author>
  <icon>https://archive.casouri.cat/favicon.png</icon>
  <id>urn:uuid:53fd03d4-ec1b-11eb-8cca-e7401fdbc2e2</id>
  
  <entry><title>List Unsaved Buffers Before Exiting Emacs</title><link href="https://archive.casouri.cat/note/2021/clean-exit"/><id>urn:uuid:79af8cc8-f6c0-11eb-a83c-5b2a03ac1c87</id><updated>2021-08-06T10:13:00.00-05:00</updated><content type="html">&lt;p&gt;When you hit &lt;code&gt;C-x C-c&lt;/code&gt; to exit Emacs but there are unsaved buffers, Emacs asks you whether to save each buffer. The problem is, more often than not, I don’t remember why there is an outstanding change, and all I can do is to nervously say “yes”, hoping that it isn’t a typo I accidentally typed into that buffer.&lt;/p&gt;&lt;p&gt;Wouldn’t it be nice if Emacs can show me a list of unsaved buffers, and let me examine them and save/kill them? The function below does just that: bind it to &lt;code&gt;C-x C-c&lt;/code&gt; and you will always exit Emacs with peace in your mind.&lt;/p&gt;&lt;pre class="code-block"&gt;(defun clean-exit ()
  "Exit Emacs cleanly.
If there are unsaved buffer, pop up a list for them to be saved
before existing. Replaces ‘save-buffers-kill-terminal’."
  (interactive)
  (if (frame-parameter nil 'client)
      (server-save-buffers-kill-terminal arg)
    (if-let ((buf-list (seq-filter (lambda (buf)
                                     (and (buffer-modified-p buf)
                                          (buffer-file-name buf)))
                                   (buffer-list))))
        (progn
          (pop-to-buffer (list-buffers-noselect t buf-list))
          (message "s to save, C-k to kill, x to execute"))
      (save-buffers-kill-emacs))))&lt;/pre&gt;</content></entry>
</feed>
