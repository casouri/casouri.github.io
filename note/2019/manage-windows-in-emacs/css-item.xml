<item>
<title>Manage Windows in Emacs</title>
<link>https://archive.casouri.cat/note/2019/manage-windows-in-emacs</link>
<guid>https://archive.casouri.cat/note/2019/manage-windows-in-emacs</guid>
<description><![CDATA[<p>
Managing windows in Emacs seems complicated. There exists a ton of commands and packages and the windows are still messy. From my experience, all you need is the following commands:
</p>

<dl class="org-dl">
<dt><code>windmove-up/down/left/right</code></dt><dd>Moves to the window in direction.</dd>
<dt><code>C-x 1</code></dt><dd>Expand selected window to maximum.</dd>
<dt><code>C-x 2</code></dt><dd>Split window vertically.</dd>
<dt><code>C-x 3</code></dt><dd>Split window horizontally.</dd>
<dt><code>luna-expand-window</code></dt><dd>Merge all siblings of selected window.</dd>
<dt>(requires <code>buffer-move</code>) <code>buf-move</code></dt><dd>Moves buffer to the window in direction.</dd>
<dt><code>winner-undo/redo</code></dt><dd>Go back/forward in window configuration history.</dd>
</dl>

<p>
Code for <code>luna-expand-window</code>:
</p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(defun luna-window-sibling-list (&amp;optional window)
  "Return all siblings of WINDOW or selected window."
  (let* ((parent (window-parent window))
         (win (window-child parent))
         lst)
    (while win
      (push win lst)
      (setq win (window-next-sibling win)))
    (remove (or window (selected-window)) lst)))

(defun luna-expand-window ()
  "Delete all sibling windows."
  (interactive)
  (mapc #'delete-window (luna-window-sibling-list)))
</pre>
</div>

<p>
Some related configurations:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp"># always pop window to right
(setq split-height-threshold              nil
      split-width-threshold               80)
# donâ€™t pop new frames
(setq ns-pop-up-frames nil)
</pre>
</div>
]]></description>

<pubDate>Sat, 03 Aug 2019 13:39:00 -0400</pubDate>
</item>
